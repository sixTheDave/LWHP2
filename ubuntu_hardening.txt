#### Ubuntu/Debian hardening points for workstations
## License: GNU Free Documentation Licenense(for details, see LICENSE.txt)
## Author: six

Before starting, consider your threat model and possible combinations of cryptography sticks.

=========
0. Prepare hardware

Prepare your BIOS settings, configure password for boot/settings.

Turn off WWAN, virtualization, camera, microphone and other devices if you don't want to use them. These can be turned back later.

For privacy you probably want to turn off computrace, vPro and other backdoor-ish features.

TPM Boot is also a good idea: https://safeboot.dev/

Turn on tamper detection.


=========
1. During install

- Make sure to install offline.

- Minimal install, only what is needed

- Set up LVM with LUKS encryption OR with encrypted ZFS
    Note 1: /boot cannot be encrypted, you can keep it on a pendrive or preferably a cryptostick or use TPM boot
    Note 2: with LUKS/ZFS encrypted you can turn on auto login for conviniency (why? if luks pass is breached, all is lost, pass reset is too simple)

- Recommended mount options (add "discard" for SSD):
    /home     rw,nodev,nouser,noexec,nosuid,discard
    /tmp      rw,nodev,noexec,nouser,nosuid,discard
    /var/tmp  rw,nodev,noexec,nouser,nosuid,discard
    /var      rw,nodev,nouser,nosuid,discard
    # /var could be noexec too, but it would break apt that way.
    # you can remount var before you use apt, eg with a simple script
    
    Hide processes that the user don't need to see (fstab too)
        proc    /proc    proc    defaults,hidepid=2  0  0

=========
2. After install

- Disable information sending to canonical
- Disable "Connection checking"
- "Never" send errorreports

- Create a user which is not sudoer and use it for daily activities

- Configure auto update to run everyday (on Debian "unattended-upgrades", on Ubuntu you can do it with Software Center settings)
    https://wiki.debian.org/UnattendedUpgrades

- Remove unnecessary programs (eg. avahi-daemon and rpcbind)
    netstat -tulnp  # Check listening apps and if not needed remove them
    apt-get remove avahi-daemon # "remove" will keep config files, purge deletes everythin!

- Disable USB Mass Storages if you don't need them (if you have other storage ports, you can turn these off against hw exploits)
    echo "blacklist usb-storage" | tee -a /etc/modprobe.d/blacklist.conf
    update-initramfs -u

- Use apparmor for stricter privileges.
   # https://wiki.debian.org/AppArmor/HowToUse
   # https://help.ubuntu.com/12.04/serverguide/apparmor.html
   apt-get update
   apt-get install apparmor apparmor-profiles apparmor-utils apparmor-profiles-extra apparmor-easyprof firejail -y
   sed -i -e 's/GRUB_CMDLINE_LINUX_DEFAULT="/&security=apparmor /' /etc/default/grub
   #sed -e 's/GRUB_TIMEOUT=5/GRUB_TIMEOUT=1/' /etc/default/grub ## This is 0 by default in latest ubuntu versions
   update-grub
   # to turn on apparmor profiles, use: aa-enforce <program>

- Use OSSEC or setup auditd if you'd like. You can also send the logs to remote syslog-ng. Example audit.rules for EXEC logs:
    -a exit,always -F arch=b64 -F euid=0 -S execve
    -a exit,always -F arch=b32 -F euid=0 -S execve


- Kernel hardening
    - If you are compiling the kernel you may want ideas from:
        https://kernsec.org/wiki/index.php/Kernel_Self_Protection_Project/Recommended_Settings
    - Sysctl hardening options
        echo -e '''kernel.dmesg_restrict=1\nkernel.kptr_restrict=1\nkernel.kexec_load_disabled=1\nkernel.yama.ptrace_scope=1\nuser.max_user_namespaces=0''' >> /etc/sysctl.conf


- Configure firewall to DROP everything by default and allow only manadotory connections for root, aptitude, dns and the first user. Edit before apply!

- Example of iptables firwall and Wireguard VPN (apt install wireguard -y)

#!/bin/bash
IPT=/sbin/iptables
$IPT -F
$IPT -F -t nat
$IPT -X
$IPT -N Allower
$IPT -A OUTPUT -j Allower

# Allow locals
$IPT -A OUTPUT -s <ip> -m owner --uid-owner 1000 -j ACCEPT # Allow only if wireguard is up, wg local ip
$IPT -A OUTPUT -s <ip>/<mask> -m owner --uid-owner 1000 -j ACCEPT # Allow only if wireguard is up, wg net
$IPT -A OUTPUT -d 127.0.0.1 -m owner --uid-owner 1000 -j ACCEPT # Local, eg for burp
$IPT -A OUTPUT -d 192.168.0.0/16 -m owner --uid-owner 1000 -j ACCEPT # Local
$IPT -A OUTPUT -d 172.16.0.0/12 -j ACCEPT # Local
$IPT -A OUTPUT -d 10.0.0.0/8 -j ACCEPT # Local

# Allow these users only
$IPT -A Allower -m owner --uid-owner 0 -j ACCEPT
$IPT -A Allower -m owner --uid-owner 1000 -j ACCEPT
$IPT -A Allower -m owner --uid-owner 105 -j ACCEPT    # Aptitude
$IPT -A Allower -m owner --uid-owner 112 -j ACCEPT    # dnsmasq
#$IPT -A Allower -m owner --uid-owner 124 -j ACCEPT    # sambashare
#$IPT -A OUTPUT -m owner --uid-owner 112 -d <ip> -p udp --dport 53 -j ACCEPT    # DNS, https://www.opennic.org/

$IPT -A INPUT --in-interface lo -j ACCEPT
$IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPT -A OUTPUT -d <ip> -j ACCEPT # wireguard ip

# Drop everything else
$IPT -P OUTPUT DROP
$IPT -P INPUT DROP
$IPT -P FORWARD DROP


# Same logic follows for IPv6
IPT=/sbin/ip6tables
$IPT -F
$IPT -F -t nat
$IPT -X
$IPT -N Allower
$IPT -A OUTPUT -j Allower

$IPT -A Allower -m owner --uid-owner 0 -j ACCEPT
$IPT -A Allower -m owner --uid-owner 1000 -j ACCEPT
$IPT -A Allower -m owner --uid-owner 105 -j ACCEPT    # Aptitude
$IPT -A Allower -m owner --uid-owner 112 -j ACCEPT    # dnsmasq
#$IPT -A OUTPUT -m owner --uid-owner 112 -d <ip> -p udp --dport 53 -j ACCEPT    # DNS, https://www.opennic.org/

$IPT -A INPUT --in-interface lo -j ACCEPT
$IPT -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
$IPT -P OUTPUT ACCEPT
$IPT -P INPUT ACCEPT
$IPT -P FORWARD ACCEPT

# Make sure wireguard starts automatically
wg-quick up wg0


- Optionally, disable IPv6 || might be better to switch to IPv6 in 2021!
    echo 'blacklist ipv6' >> /etc/modprobe.d/blacklist
    echo net.ipv6.conf.all.disable_ipv6=1 > /etc/sysctl.d/disableipv6.conf
    echo "1" > /proc/sys/net/ipv6/conf/all/disable_ipv6
    echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
    
- Cron
echo ALL >>/etc/cron.deny  # Check if you need to allow users!



=====
3. Remote management (if needed)

- Use hw key for authentication

- SSH for remote management if needed, example settings:
    Port 1234
    ListenAddress 0.0.0.0
    PermitRootLogin without-password  # Use keys!
    PermitEmptyPasswords no
    PasswordAuthentication no  # Generate your SSH key with a password!
    AllowUsers user1 user2  # No other users will be allowed
    X11Forwarding no
    PermitTunnel no
    GatewayPorts no  # Note that it won't allow port forawrding!



=====
6. Browser security basics

- Use the following extenstions for FireFox:
uBlockOrigin
NoScript
HTTPS Everywhere
ClearURLs (remove tracking urls)
WebRTC Disable (disables leaking info through WebRTC, eg. local ips)
AdBlock
User-Agent Switcher and Manager

For password management: use BitWarden with a hw key (eg. YubiKey or PitchFork).

I don't recommend to use Chrome at all, nor Chromium. Use Brave if you really need such a browser.

Note: Know that allowing javascript exposes you to hardcore tracking possibilties (eg. javascript audio API fingerprinting which is used by several big sites). Check at https://coveryourtracks.eff.org/
